<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Gaming on Linux</title><link>https://playingplaces.com/posts/</link><description>Recent content in Posts on Gaming on Linux</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://playingplaces.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Personal remote gaming platform</title><link>https://playingplaces.com/posts/intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://playingplaces.com/posts/intro/</guid><description>Introduction For a while now, I&amp;rsquo;ve been playing games on linux. There are various tutorials on how to get started using lutris, steam, or just wine/proton. In this ad-hoc blog series, I&amp;rsquo;ll describe how I&amp;rsquo;ve setup my own personal remote gaming with the ability to play games from anywhere in the world, using steam and only Linux OS.
More specifically my setup as of completing my &amp;ldquo;personal stadia&amp;rdquo; is powered by a Gaming PC featuring a 5700 rx AMD graphics card with the main client being a high end workstation laptop.</description></item><item><title>Personal remote gaming: architecture</title><link>https://playingplaces.com/posts/prerequisites/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://playingplaces.com/posts/prerequisites/</guid><description>Architecture Here I&amp;rsquo;m describing what you need to have and the connectivity relationship of each component to have a complete network that allows you to:
Do power management over the internet Have a reliable outgoing bandwidth Deal with emergencies Ingredients Note: I linked on the products I bought for convenience, in no way am I endorsing them.
2 Smart plugs (I&amp;rsquo;ve used these) 2 Powerline adapters (3 for testing locally although you can test with the client over the wifi, adapt if your gaming pc is in proximity with the router, mine isn&amp;rsquo;t) (I&amp;rsquo;ve used these) At least 2 ethernet cables (often included in the powerline adapters) An amazon echo (theoretically you can do with any smart home assistant, it just happened I have one of those lying around) A smart phone (helps with managing the smart plugs or giving commands to alexa if you are not home) An internet connection with good upload bandwidth (mine is 100Mpbs, in theory you can work with much less) Basic coding skills (I&amp;rsquo;ve used a bit of nodejs, a bit of bash and a bit of python) 2 Extension cables (adapt the size according to your pc needs) An amazon developer account (aws) and basic knowledge on creating Alexa skills.</description></item><item><title>Implementing remote gaming</title><link>https://playingplaces.com/posts/implementation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://playingplaces.com/posts/implementation/</guid><description>Implementation Enable wake on lan In order to turn on the PC without touching it, we need to send a magic packet over ethernet. There are a lot of tools that you can use to test if wake on lan works (android apps, the command line ethtool) but the first step is to find the setting on your BIOS.
There&amp;rsquo;s no single answer where this setting will be, mine was on advance and ACS management.</description></item></channel></rss>